name: release

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
      - v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+

jobs:
  release:
    runs-on: ${{ matrix.os }}
    permissions:
      id-token: write
      attestations: write

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact: paddler-bin-linux-amd64
            
          - os: windows-latest
            artifact: paddler-bin-windows-amd64.exe
            
          - os: macos-latest
            artifact: paddler-bin-macos-amd64

    steps:        
      - uses: actions/checkout@v4

      - name: Build rust
        uses: ./.github/actions/rust-build/
        with:
          bin: ${{ matrix.artifact }}
          profile: release
          features: web_dashboard
          before: |
            make esbuild

      - name: Archive binary
        uses: ./.github/actions/rust-cargo-deb/
        with:
          deb: ${{ matrix.artifact }}
          os: ${{ matrix.os }}
          path: ${{ matrix.artifact }}

      - name: Compress action step
        uses: a7ul/tar-action@v1.1.0
        id: compress
        with:
          command: c
          files: |
            ./${{ matrix.artifact }}
          outPath: ${{ matrix.artifact }}.tar.gz

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: ${{ matrix.artifact }}*
          # subject-name: intentt/${{ github.repository}}
          # subject-digest: ${{ steps.push.outputs.digest }}
          # push-to-registry: true

      - name: Determine tag type
        id: tag_type
        run: |
          if [[ ${{ github.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+-rc[0-9]+$ ]]; then
            echo "tag_type=PRE_RELEASE_TAG" >> $GITHUB_OUTPUT
          elif [[ ${{ github.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "tag_type=RELEASE_TAG" >> $GITHUB_OUTPUT
          else
            echo "tag_type=INVALID_TAG" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Upload artifacts
        if: steps.tag_type.outputs.tag_type != 'INVALID_TAG'
        uses: svenstaro/upload-release-action@v2
        with:
          file: ${{ matrix.artifact }}*
          file_glob: true
          overwrite: true
          prerelease: ${{ steps.tag_type.outputs.tag_type == 'PRE_RELEASE_TAG' }}
          tag: ${{ github.ref }}

  publish_tap:
    needs: release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest      
          - os: macos-latest

    steps:
      - name: Publish to Homebrew
        if: | 
          ${{ matrix.artifact }} == "ubuntu-latest" ||
          ${{ matrix.artifact }} == "macos-latest" 
        uses: dawidd6/action-homebrew-bump-formula@v4
        with:
          # Required, custom GitHub access token with the 'public_repo' and 'workflow' scopes
          token: ${{ secrets.HOMEBREW_TOKEN }}
          # Optional, will commit with this user name
          user_name: ${{ github.actor }}
          # # Optional, will commit with this user email
          # user_email: email@example.com
          # Optional, will create tap repo fork in organization
          org: distantmagic/paddler
          # Optional, use the origin repository instead of forking
          # no_fork: false
          # Optional, defaults to homebrew/core
          tap: intentt/homebrew-tap
          formula: paddler
          # Optional, will be determined automatically
          tag: ${{ github.ref }}
          # Optional, will be determined automatically
          # revision: ${{github.sha}}
          # Optional, if don't want to check for already open PRs
          # force: false # true

  # publish_docker_image:
  #   needs: release
  #   runs-on: ubuntu-latest

  #   permissions:
  #     contents: read
  #     packages: write
  #     attestations: write
  #     id-token: write

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Log in to the Container registry
  #       uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
  #       with:
  #         registry: intentt
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Extract metadata (tags, labels) for Docker
  #       id: meta
  #       uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
  #       with:
  #         images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

  #     - name: Build and push Docker image
  #       id: push
  #       uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
  #       with:
  #         context: .
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}

  #     - name: Generate artifact attestation
  #       uses: actions/attest-build-provenance@v2
  #       with:
  #         subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
  #         subject-digest: ${{ steps.push.outputs.digest }}
  #         push-to-registry: true
