name: release

on:
  push:
    tags:
      - v[0-9].[0-9]+.[0-9]+
      - v[0-9].[0-9]+.[0-9]+-rc[0-9]+   

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - rust_target: x86_64-unknown-linux-gnu
            artifact_name: paddler-bin-linux-amd64
          - rust_target: x86_64-pc-windows-gnu
            artifact_name: paddler-bin-windows-amd64.exe       

    steps:
    - name: checkout code
      uses: actions/checkout@v4

    - name: set up Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        targets: x86_64-pc-windows-gnu

    - name: Install target for cross-compilation
      run: rustup target add ${{ matrix.rust_target }}

    - name: Generate static files
      run: make esbuild
      
    - name: Build the binary
      run: |
        cargo build --release --target ${{ matrix.rust_target }}
        if [[ "${{ matrix.artifact_name }}" == *.exe ]]; then
          mv target/${{ matrix.rust_target }}/release/paddler.exe ${{ matrix.artifact_name }}
        else
          mv target/${{ matrix.rust_target }}/release/paddler ${{ matrix.artifact_name }}
        fi

    - name: determine tag type
      id: tag_type
      run: |
        if [[ ${{ github.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+-rc[0-9]+$ ]]; then
          echo "tag_type=PRE_RELEASE_TAG" >> $GITHUB_OUTPUT
        elif [[ ${{ github.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "tag_type=RELEASE_TAG" >> $GITHUB_OUTPUT
        else
          echo "tag_type=INVALID_TAG" >> $GITHUB_OUTPUT
        fi

    - name: upload binaries to release
      if: steps.tag_type.outputs.tag_type != 'INVALID_TAG'
      uses: svenstaro/upload-release-action@v2
      with:
        file: target/release/paddler
        asset_name: paddler-bin-linux-amd64
        overwrite: true
        prerelease: ${{ steps.tag_type.outputs.tag_type == 'PRE_RELEASE_TAG' }}
        tag: ${{ github.ref }}