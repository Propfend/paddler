name: release

on:
  push:
    tags:
      - v[0-9].[0-9]+.[0-9]+
      - v[0-9].[0-9]+.[0-9]+-rc[0-9]+

jobs:
  build:
    name: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: paddler-bin-linux-amd64

          - os: windows-latest
            artifact_name: paddler-bin-windows-amd64.exe

          - os: macos-latest
            artifact_name: paddler-bin-macos-amd64

    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: build static
        run: |
          make esbuild

      - name: build the binary
        run: |
          cargo build --features web_dashboard --release
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            mv target/release/paddler.exe ${{ matrix.artifact_name }}
          else
            mv target/release/paddler ${{ matrix.artifact_name }}
          fi
        shell: bash

      - name: determine tag type
        id: tag_type
        run: |
          if [[ ${{ github.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+-rc[0-9]+$ ]]; then
            echo "tag_type=PRE_RELEASE_TAG" >> $GITHUB_OUTPUT
          elif [[ ${{ github.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "tag_type=RELEASE_TAG" >> $GITHUB_OUTPUT
          else
            echo "tag_type=INVALID_TAG" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: upload binaries to release
        if: steps.tag_type.outputs.tag_type != 'INVALID_TAG'
        uses: svenstaro/upload-release-action@v2
        with:
          file: ${{ matrix.artifact_name }}
          overwrite: true
          prerelease: ${{ steps.tag_type.outputs.tag_type == 'PRE_RELEASE_TAG' }}
          tag: ${{ github.ref }}