name: release

on:
  push:
    tags:
      - v[0-9]+\.[0-9]+\.[0-9]+
      - v[0-9]+\.[0-9]+\.[0-9]+-rc[0-9]+   

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - rust_target: x86_64-unknown-linux-gnu 
            artifact_name: paddler-bin-linux-amd64

          - rust_target: x86_64-pc-windows-gnu
            artifact_name: paddler-bin-windows-amd64.exe

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        targets: ${{ matrix.rust_target }}

    - name: Install target for cross-compilation
      run: rustup target add ${{ matrix.rust_target }}

    - name: Install mingw for Windows cross-compilation
      if: matrix.rust_target == 'x86_64-pc-windows-gnu'
      run: sudo apt-get install -y gcc-mingw-w64-x86-64

    - name: Generate static folder
      run: make esbuild
      
    - name: Build the binary
      run: |
        cargo build --features web_dashboard --target ${{ matrix.rust_target }}
        if [[ "${{ matrix.artifact_name }}" == *.exe ]]; then
          mv target/${{ matrix.rust_target }}/release/paddler.exe ${{ matrix.artifact_name }}
        else
          mv target/${{ matrix.rust_target }}/release/paddler ${{ matrix.artifact_name }}
        fi

    - name: Upload binary as artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: ${{ matrix.artifact_name }}

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4

    - name: Determine tag type
      id: tag_type
      run: |
        if [[ ${GITHUB_REF} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+-rc[0-9]+$ ]]; then
          echo "tag_type=PRE_RELEASE_TAG" >> $GITHUB_OUTPUT
        elif [[ "${GITHUB_REF}" =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "tag_type=RELEASE_TAG" >> $GITHUB_OUTPUT
        else
          echo "tag_type=INVALID_TAG" >> $GITHUB_OUTPUT
        fi

    - name: Upload binaries to release
      if: steps.tag_type.outputs.tag_type != 'INVALID_TAG'
      uses: ncipollo/release-action@v1
      with:
        artifacts: "paddler-bin-*"
        prerelease: ${{ steps.tag_type.outputs.tag_type == 'PRE_RELEASE_TAG' }}
        files: |
          paddler-bin-linux-amd64/paddler-bin-linux-amd64.zip
          paddler-bin-windows-amd64/paddler-bin-windows-amd64.exe.zip
        tag: ${{ github.ref }}
      env:
        GITHUB_TOKEN: ${{ github.token }}
