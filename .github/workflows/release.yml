# name: release

# on:
#   push:
#     tags:
#       - v[0-9]+.[0-9]+.[0-9]+
#       - v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+

# jobs:
#   release:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         include:
#           - os: ubuntu-latest
#             artifact: paddler-bin-linux-amd64
            
#           - os: windows-latest
#             artifact: paddler-bin-windows-amd64.exe
            
#           - os: macos-latest
#             artifact: paddler-bin-macos-amd64

#     steps:
#       - uses: actions/checkout@v4
#       - name: Build
#         run: make

#       - name: Prepare binary
#         run: |
#           if [ "${{ matrix.is-linux }}" = "true" ]; then
#             cargo deb --no-build --output ${{ matrix.artifact }}.deb --maintainer "Intentt <paddler@intentt.io>"
#             mv target/release/paddler ${{ matrix.artifact }}
#           elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
#             mv target/release/paddler.exe ${{ matrix.artifact }}
#           else
#             mv target/release/paddler ${{ matrix.artifact }}
#           fi
#         shell: bash

#       - name: Determine release type
#         id: tag
#         run: |
#           if [[ ${{ github.ref }} =~ -rc[0-9]+$ ]]; then
#             echo "prerelease=true" >> $GITHUB_OUTPUT
#           else
#             echo "prerelease=false" >> $GITHUB_OUTPUT
#           fi

#       - name: Create release
#         uses: softprops/action-gh-release@v2
#         with:
#           tag_name: ${{ github.ref_name }}
#           prerelease: ${{ steps.tag.outputs.prerelease }}
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#       - name: Upload binary
#         uses: softprops/action-gh-release@v2
#         with:
#           files: ${{ matrix.artifact }}
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#       - name: Upload .deb package (Linux only)
#         if: matrix.is-linux == 'true'
#         uses: softprops/action-gh-release@v2
#         with:
#           files: ${{ matrix.artifact }}.deb
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# name: release

# on:
#   push:
#     tags:
#       - v[0-9]+.[0-9]+.[0-9]+
#       - v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+

# jobs:
#   create-release:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - uses: taiki-e/create-gh-release-action@v1
#         with:
#           token: ${{ secrets.GITHUB_TOKEN }}

#   upload-assets:
#     needs: create-release
#     strategy:
#       matrix:
#         include:
#           - os: ubuntu-latest
#             artifact_name: paddler-bin-linux-amd64
            
#           # - os: windows-latest
#           #   artifact_name: paddler-bin-windows-amd64.exe
            
#           - os: macos-latest
#             artifact_name: paddler-bin-macos-amd64
            
#     runs-on: ${{ matrix.os }}
#     steps:
#       - uses: actions/checkout@v4
      
#       - id: upload
#         uses: taiki-e/upload-rust-binary-action@v1
#         with:
#           bin: ${{ matrix.artifact_name }}
#           profile: dev
#           zip: none
#           archive: ${{ matrix.artifact_name }}
#           token: ${{ secrets.GITHUB_TOKEN }}
#       - run: |
#           sudo tar -xzf ${{ steps.upload.outputs.tar }}
#           ls
#       - uses: softprops/action-gh-release@v2
#         with:
#           files: ${{ steps.upload.outputs.archive }}

          # echo ${{ steps.upload.outputs.archive }}
          # sudo tar -xzf ${{ steps.upload.outputs.archive }}
      # - name: upload artifacts
      #   if: steps.tag_type.outputs.tag_type != 'INVALID_TAG'
      #   uses: svenstaro/upload-release-action@v2
      #   with:
      #     file: ${{ matrix.artifact_name }}
      #     overwrite: true
      #     prerelease: ${{ steps.tag_type.outputs.tag_type == 'PRE_RELEASE_TAG' }}
      #     tag: ${{ github.ref }}

      # - name: Deb Build
      #   uses: ebbflow-io/cargo-deb-armv7-debian@1.47.0-1
        # run: |
        #   if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
        #     cargo install cargo-deb
        #     cargo deb --no-build --output ${{ matrix.artifact_name }}.deb --maintainer "Intentt <paddler@intentt.io>"
        #     mv target/release/paddler ${{ matrix.artifact_name }}
        #   elif [ "${{ matrix.os }}" == "windows-latest" ]; then
        #     mv target/release/paddler.exe ${{ matrix.artifact_name }}
        #   else
        #     mv target/release/paddler ${{ matrix.artifact_name }}
        #   fi

        # .github/workflows/release.yml

name: release

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
      - v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+

jobs:
  check:
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v4

        - name: Check licenses
          uses: EmbarkStudios/cargo-deny-action@v2
          with:
            log-level: warn
            command: check
            arguments: --all-features --workspace
            command-arguments: license

  release:
    needs: check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact: paddler-bin-linux-amd64
            
          - os: windows-latest
            artifact: paddler-bin-windows-amd64.exe
            
          - os: macos-latest
            artifact: paddler-bin-macos-amd64

    steps:        
      - uses: actions/checkout@v4

      - name: Build rust
        uses: ./.github/actions/rust-build/
        with:
          bin: ${{ matrix.artifact }}
          profile: release
          features: web_dashboard
          before: |
            make esbuild
            cargo install cargo-deny

      - name: Archive binary
        uses: ./.github/actions/rust-cargo-deb/
        with:
          deb: ${{ matrix.artifact }}
          os: ${{ matrix.os }}
          path: ${{ matrix.artifact }}
          before: cargo install cargo-deb

      - name: Compress action step
        uses: a7ul/tar-action@v1.1.0
        id: compress
        with:
          command: c
          files: |
            ./${{ matrix.artifact }}
          outPath: ${{ matrix.artifact }}.tar.gz

      - name: Determine tag type
        id: tag_type
        run: |
          if [[ ${{ github.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+-rc[0-9]+$ ]]; then
            echo "tag_type=PRE_RELEASE_TAG" >> $GITHUB_OUTPUT
          elif [[ ${{ github.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "tag_type=RELEASE_TAG" >> $GITHUB_OUTPUT
          else
            echo "tag_type=INVALID_TAG" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Upload artifacts
        if: steps.tag_type.outputs.tag_type != 'INVALID_TAG'
        uses: svenstaro/upload-release-action@v2
        with:
          file: ${{ matrix.artifact }}*
          file_glob: true
          overwrite: true
          prerelease: ${{ steps.tag_type.outputs.tag_type == 'PRE_RELEASE_TAG' }}
          tag: ${{ github.ref }}

      - name: Update Homebrew formula
        if: | 
          ${{ matrix.artifact }} == "ubuntu-latest" ||
          ${{ matrix.artifact }} == "macos-latest" 
        uses: dawidd6/action-homebrew-bump-formula@v4
        with:
          # Required, custom GitHub access token with the 'public_repo' and 'workflow' scopes
          token: ${{ secrets.TOKEN }}
          # Optional, will commit with this user name
          # user_name: name
          # # Optional, will commit with this user email
          # user_email: email@example.com
          # Optional, will create tap repo fork in organization
          org: intentt
          # Optional, use the origin repository instead of forking
          # no_fork: false
          # Optional, defaults to homebrew/core
          tap: intentt/homebrew-paddler
          # Formula name, required
          formula: paddler
          # Optional, will be determined automatically
          tag: ${{ github.ref }}
          # Optional, will be determined automatically
          revision: ${{github.sha}}
          # Optional, if don't want to check for already open PRs
          # force: false # true